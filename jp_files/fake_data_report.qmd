---
title: "First Draft of Measure Cleaning"
author: "Jonathan A. Pedroza, PhD"
format: 
  html:
    code-fold: true
    toc: true
    toc-location: left
bibliography: twp_references.bib
editor: visual
editor_options: 
  chunk_output_type: console
---

## Data Loading & Packages

```{r, message = FALSE, warning = FALSE}
library(tidyverse)

twp <- 
  read_csv('C:/Users/cpppe/Desktop/github_projects/tpwdata_fork/R/data/tpw.csv') %>%
  janitor::clean_names() %>%
  rowid_to_column() %>%
  filter(rowid %in% c(3, 4))
```

### Functions

```{r, message = FALSE, warning = FALSE}
subtract_scale <-
  function(data,
           id,
           value){

  library(purrr)
  library(dplyr)
  library(magrittr)

  {{data}} %>%
    mutate(across(.cols = c(everything(), -{{id}}),
                  ~.x - value))
  }

add_scale <-
  function(data,
           id,
           value){

  library(purrr)
  library(dplyr)
  library(magrittr)

  {{data}} %>%
    mutate(across(.cols = c(everything(), -{{id}}),
                  ~.x + value))
  }

composite_total_avg_fun <- function(
    dataset,
    # x,
    id,
    vector_type = is.character,
    reverse = NULL,
    n_items
){

  library(magrittr)
  library(dplyr)
  library(tidyselect)

  dataset <- {{dataset}} %>%
    # dplyr::select(tidyselect::matches(x)) %>%
    mutate_if(vector_type, as.numeric)

  high_value <- max(dataset)

  no_reverse <- dataset %>%
    select(-all_of(reverse))

  need_reverse <- dataset %>%
    select(all_of(reverse)) %>%
    mutate(across(.cols = everything(),
                                ~1 + high_value - .x,
                                .names = '{.col}_r')) %>%
    select(all_of(reverse))

  full_data <- data.frame(no_reverse, need_reverse) %>%
    mutate(sum_values = rowSums(across(.cols = c(everything(), -{{id}}))),
                  mean_values = sum_values/{{n_items}})

  message('Make sure that your variables are coded correctly before using these composite scores.')

  tibble::as_tibble(full_data)
}

cutoff_plot <-
  function(data,
         x,
         cutoff = 0,
         secondary_cutoff = 0,
         bins = 20){

  library(magrittr)
  library(dplyr)
  library(ggplot2)

    x <- enquo(x)

  {{data}} %>%
    ggplot(aes({{x}})) +
    geom_histogram(bins = {{bins}},
                   color = 'white',
                   fill = 'dodgerblue') +
    geom_vline(xintercept = {{cutoff}},
               color = 'black',
               linetype = 2,
               size = 1.25) +
    geom_vline(xintercept = {{secondary_cutoff}},
               color = 'red',
               linetype = 3,
               size = 1.25)
  }

subscale_create <- function(data,
                            scale1,
                            scale1_items,
                            scale2,
                            scale2_items,
                            scale3 = NULL,
                            scale3_items = 0,
                            scale4 = NULL,
                            scale4_items = 0,
                            scale5 = NULL,
                            scale5_items = 0,
                            scale6 = NULL,
                            scale6_items = 0,
                            scale7 = NULL,
                            scale7_items = 0,
                            scale8 = NULL,
                            scale8_items = 0,
                            scale9 = NULL,
                            scale9_items = 0,
                            scale10 = NULL,
                            scale10_items = 0){

  {{data}} %>%
    mutate(
      total_1 = rowSums(subset({{data}}, select = scale1), na.rm = TRUE),
      avg_1 = total_1/scale1_items,
      total_2 = rowSums(subset({{data}}, select = scale2), na.rm = TRUE),
      avg_2 = total_2/scale2_items,
      total_3 = rowSums(subset({{data}}, select = scale3), na.rm = TRUE),
      avg_3 = total_3/scale3_items,
      total_4 = rowSums(subset({{data}}, select = scale4), na.rm = TRUE),
      avg_4 = total_4/scale4_items,
      total_5 = rowSums(subset({{data}}, select = scale5), na.rm = TRUE),
      avg_5 = total_5/scale5_items,
      total_6 = rowSums(subset({{data}}, select = scale6), na.rm = TRUE),
      avg_6 = total_6/scale6_items,
      total_7 = rowSums(subset({{data}}, select = scale7), na.rm = TRUE),
      avg_7 = total_7/scale7_items,
      total_8 = rowSums(subset({{data}}, select = scale8), na.rm = TRUE),
      avg_8 = total_8/scale8_items,
      total_9 = rowSums(subset({{data}}, select = scale9), na.rm = TRUE),
      avg_9 = total_9/scale9_items,
      total_10 = rowSums(subset({{data}}, select = scale10), na.rm = TRUE),
      avg_10 = total_10/scale10_items
           )
}

prop_fun_plot <- function(data,
                          x){
  library(ggplot2)
  library(dplyr)
  library(magrittr)

  x <- enquo(x)

  table_x <-
  {{data}} %>%
    group_by(!!x) %>%
    summarize(n = n(),
              prop = n/nrow({{data}}),
              percentage = scales::percent(prop)) %>%
    ungroup()

  plot_x <-
    table_x %>%
    ggplot(aes(!!x, n)) +
    geom_col(color = 'white',
             fill = 'dodgerblue') +
      geom_text(aes(label = percentage), vjust = 2) +
      geom_text(aes(label = n), vjust = -.5)

  return(list(table_x, plot_x))
}
```

## Center for Epidemiological Studies Depression Scale (CES-D)

```{r, message = FALSE, warning = FALSE}
cesd <-
  twp %>%
  select(matches('^c\\d')) %>%
  mutate_if(is.character, as.numeric)
```

### Fake Data Creation

```{r, message = FALSE, warning = FALSE}
set.seed(07272022)
cesd_fake <-
  as_tibble(
    map(
      cesd %>% select(c1:c20),
      ~sample(seq(from = 1,
                  to = 4,
                  by = 1),
              size = 120,
              replace = TRUE)
    )
  )

cesd_fake <-
  cesd_fake %>%
  rowid_to_column()

cesd_fake_new <- subtract_scale(cesd_fake,
                                id = 'rowid',
                                value = 1)

```

-   Variables for CESD scale

    -   c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20

    -   Variable Scale

        -   0 - "Rarely or none of the time"

        -   1 - "Some or a little of the time"

        -   2 - "Occasionally or a moderate amount of time"

        -   3 - "Most or all of the time"

-   Total scores should range from `0` to `60`

-   Revere Scoring

    -   Items `c4`, `c8`, `c12`, and `c16` are reverse scored

-   Variables For Other Items

    -   c21, c22, c23, c24

        -   if response is `No` to item `c21`, then TC moved on to item `c24`

    -   Variable Scale

        -   1 - Yes

        -   2 - No

-   Subscales

    -   Positive Affect

        -   c4, c8, c12, c16

    -   Depressive Symptoms

        -   c1, c2, c3, c5, c6, c7, c9, c10, c11, c13, c14, c15, c17, c18, c19, c20

-   Reference: @radloff1977ces

    -   Additional References:

        -   Cutoff Information: @henry2018determining

        -   Items for Potential Subscales: @canady2009measurement

**JP NOTE** I'm only going to work with the original 20-item CESD scale for this run through.

### CESD Item Descriptive Statistics

CESD Prompt: Circle the number for each statement that best describes how often you felt this way DURING THE PAST WEEK:

-   c1: I was bothered by things that usually don't bother me

```{r}
prop_fun_plot(cesd_fake_new,
              x = c1)
```

-   c2: I did not feel like eating; my appetite was poor

```{r}
prop_fun_plot(cesd_fake_new,
              x = c2)
```

-   c3: I felt that I could not shake off the blues even with help from my family or friends

```{r}
prop_fun_plot(cesd_fake_new,
              x = c3)
```

-   c4: I felt that I was just as good as other people

```{r}
prop_fun_plot(cesd_fake_new,
              x = c4)
```

-   c5: I had trouble keeping my mind on what I was doing

```{r}
prop_fun_plot(cesd_fake_new,
              x = c5)
```

-   c6: I felt depressed

```{r}
prop_fun_plot(cesd_fake_new,
              x = c6)
```

-   c7: I felt that everything I did was an effort

```{r}
prop_fun_plot(cesd_fake_new,
              x = c7)
```

-   c8: I felt hopeful about the future

```{r}
prop_fun_plot(cesd_fake_new,
              x = c8)
```

-   c9: I thought my life had been a failure

```{r}
prop_fun_plot(cesd_fake_new,
              x = c9)
```

-   c10: I felt fearful

```{r}
prop_fun_plot(cesd_fake_new,
              x = c10)
```

-   c11: My sleep was restless

```{r}
prop_fun_plot(cesd_fake_new,
              x = c11)
```

-   c12: I was happy

```{r}
prop_fun_plot(cesd_fake_new,
              x = c12)
```

-   c13: I talked less than usual

```{r}
prop_fun_plot(cesd_fake_new,
              x = c13)
```

-   c14: I felt lonely

```{r}
prop_fun_plot(cesd_fake_new,
              x = c14)
```

-   c15: People were unfriendly

```{r}
prop_fun_plot(cesd_fake_new,
              x = c15)
```

-   c16: I enjoyed life

```{r}
prop_fun_plot(cesd_fake_new,
              x = c16)
```

-   c17: I had crying spells

```{r}
prop_fun_plot(cesd_fake_new,
              x = c17)
```

-   c18: I felt sad

```{r}
prop_fun_plot(cesd_fake_new,
              x = c18)
```

-   c19: I felt that people disliked me

```{r}
prop_fun_plot(cesd_fake_new,
              x = c19)
```

-   c20: I could not "get going"

```{r}
prop_fun_plot(cesd_fake_new,
              x = c20)
```

### CESD Missing Data

```{r}

```

### CESD Composite Score

```{r, message = FALSE, warning = FALSE}
new_col_cesd <-
  composite_total_avg_fun(cesd_fake_new,
                          id = 'rowid',
                          reverse = c('c4', 'c8', 'c12', 'c16'),
                          n_items = 20) %>%
  rename(cesd_total = sum_values,
         cesd_avg = mean_values)

prop_fun_plot(new_col_cesd,
              x = cesd_total)

ggplot(data = new_col_cesd,
              aes(x = cesd_total)) +
        geom_histogram(color = 'white',
                       fill = 'dodgerblue') +
        geom_vline(xintercept = 0,
                   linetype = 2,
                   size = 1.25,
                   color = 'black') +
        geom_vline(xintercept = 60,
                   linetype = 2,
                   size = 1.25,
                   color = 'black')
```

### CESD Cutoffs

```{r}
cutoff_plot(data = new_col_cesd,
            x = cesd_total,
            cutoff = 16,
            secondary_cutoff = 23,
            bins = 20)
```

### CESD Subscales

```{r, message = FALSE, warning = FALSE}
cesd_subscale <-
  subscale_create(data = new_col_cesd,
                scale1 = c('c1', 'c2', 'c3', 'c5',
                           'c6', 'c9', 'c10', 'c11',
                           'c13', 'c14', 'c15', 'c17',
                           'c18', 'c19', 'c20'),
                scale1_items = 15,
                scale2 = c('c4', 'c8', 'c12', 'c16'),
                scale2_items = 4)

cesd_subscale %>% 
  rename(depress_symp = total_1) %>% 
  ggplot(aes(depress_symp)) + 
  geom_histogram(color = 'white',
                 fill = 'dodgerblue',
                 bins = 20)

cesd_subscale %>% 
  rename(pos_affect = total_2) %>% 
  ggplot(aes(pos_affect)) + 
  geom_histogram(color = 'white',
                 fill = 'dodgerblue',
                 bins = 20)
```

### CESD Internal Reliability

```{r, message = FALSE, warning = FALSE}
new_col_cesd %>% 
  select(c1:c20) %>% 
  psych::alpha()
```

## Brief Symptom Inventory (BSI)

```{r, message = FALSE, warning = FALSE}
bsi <-
  twp %>%
  select(matches('^bsi')) %>%
  mutate_if(is.character, as.numeric)
```

### Fake Data Creation

```{r, message = FALSE, warning = FALSE}
set.seed(07272022)
bsi_fake <-
  as_tibble(
    map(
      bsi %>% select(bsi1:bsi19),
      ~sample(seq(from = 1,
                  to = 5,
                  by = 1),
              size = 120,
              replace = TRUE)
    )
  )

bsi_fake <-
  bsi_fake %>%
  rowid_to_column()

bsi_fake_new <- subtract_scale(bsi_fake,
                                id = 'rowid',
                                value = 1)
```

-   Variables for BSI scale

    -   bsi1, bsi2, bsi3, bsi4, bsi5, bsi6, bsi7, bsi8, bsi9, bsi10, bsi11, bsi12, bsi13, bsi14, bsi15, bsi16, bsi17, bsi18, bsi19

    -   Variable Scale

        -   0 - "Not at all"

        -   1 - "A little bit"

        -   2 - "Moderately"

        -   3 - "Quite a bit"

        -   4 - "Very much"

-   Total scores should range from 0 to 76 (Double check these values - JP)

-   Revere Scoring

-   Subscales

    -   Somatization: bsi2, bsi3, bsi10, bsi11, bsi12, bsi13, bsi15

    -   Anxiety: bsi1, bsi5, bsi9, bsi16, bsi17, bsi18

    -   Depression: bsi4, bsi6, bsi7, bsi8, bsi14, bsi19

        -   **JP NOTE**: There is no question for depression ("Your feelings being easily hurt")

-   Reference: @derogatis1983brief

-   **JP NOTE** I'm only going to work with the original 19-item BSI scale for this run through.

### BSI Item Descriptive Statistics

BSI Prompt: Below is a list of problems and complaints that people sometimes have. Please read each one carefully. After you have done so, please circle the number to the right that best describes HOW MUCH DISCOMFORT THAT PROBLEM HAS CAUSED YOU DURING THE PAST WEEK INCLUDING TODAY.

During the past week, [how much were you bothered by...]{.underline}

bsi1: Nervousness or shakiness inside?

```{r}
prop_fun_plot(bsi_fake_new,
              x = bsi1)
```

bsi2: Faintness or dizziness?

```{r}
prop_fun_plot(bsi_fake_new,
              x = bsi2)
```

bsi3: Pains in heart or chest?

```{r}
prop_fun_plot(bsi_fake_new,
              x = bsi3)
```

bsi4: Thoughts of ending your life?

```{r}
prop_fun_plot(bsi_fake_new,
              x = bsi4)
```

bsi5: (Feeling) Suddenly scared for no reason?

```{r}
prop_fun_plot(bsi_fake_new,
              x = bsi5)
```

bsi6: Feeling lonely?

```{r}
prop_fun_plot(bsi_fake_new,
              x = bsi6)
```

bsi7: Feeling blue?

```{r}
prop_fun_plot(bsi_fake_new,
              x = bsi7)
```

bsi8: Feeling no interest in things?

```{r}
prop_fun_plot(bsi_fake_new,
              x = bsi8)
```

bsi9: Feeling fearful?

```{r}
prop_fun_plot(bsi_fake_new,
              x = bsi9)
```

bsi10: Nausea or upset stomach?

```{r}
prop_fun_plot(bsi_fake_new,
              x = bsi10)
```

bsi11: Trouble getting your breath?

```{r}
prop_fun_plot(bsi_fake_new,
              x = bsi11)
```

bsi12: Hot or cold spells?

```{r}
prop_fun_plot(bsi_fake_new,
              x = bsi12)
```

bsi13: Numbness or tingling in parts of your body?

```{r}
prop_fun_plot(bsi_fake_new,
              x = bsi13)
```

bsi14: Feeling hopeless about the future?

```{r}
prop_fun_plot(bsi_fake_new,
              x = bsi14)
```

bsi15: Feeling weak in parts of your body?

```{r}
prop_fun_plot(bsi_fake_new,
              x = bsi15)
```

bsi16: Feeling tense or keyed up?

```{r}
prop_fun_plot(bsi_fake_new,
              x = bsi16)
```

bsi17: Spells of terror or panic?

```{r}
prop_fun_plot(bsi_fake_new,
              x = bsi17)
```

bsi18: Feeling so restless you couldn't sit still?

```{r}
prop_fun_plot(bsi_fake_new,
              x = bsi18)
```

bsi19: Feelings of worthlessness?

```{r}
prop_fun_plot(bsi_fake_new,
              x = bsi19)
```

### BSI Missing Data

```{r}

```

### BSI Composite Score

```{r, message = FALSE, warning = FALSE}
new_col_bsi <-
  composite_total_avg_fun(bsi_fake_new,
                          id = 'rowid',
                          n_items = 19) %>%
  rename(bsi_total = sum_values,
         bsi_avg = mean_values)

prop_fun_plot(new_col_bsi,
              x = bsi_total)

ggplot(data = new_col_bsi,
              aes(x = bsi_total)) +
        geom_histogram(color = 'white',
                       fill = 'dodgerblue') +
        geom_vline(xintercept = 0, #change this value
                   linetype = 2,
                   size = 1.25,
                   color = 'black') +
        geom_vline(xintercept = 76, #change this value
                   linetype = 2,
                   size = 1.25,
                   color = 'black')
```

### BSI Cutoffs

```{r}
cutoff_plot(data = new_col_bsi,
            x = bsi_total,
            bins = 20)
```

### BSI Subscales

```{r, message = FALSE, warning = FALSE}
bsi_subscale <-
  subscale_create(data = new_col_bsi,
                scale1 = c('bsi2', 'bsi3', 'bsi10',
                           'bsi11', 'bsi12', 'bsi13', 'bsi15'),
                scale1_items = 7,
                scale2 = c('bsi1', 'bsi5', 'bsi9',
                           'bsi16', 'bsi17', 'bsi18'),
                scale2_items = 6,
                scale3 = c('bsi4', 'bsi6', 'bsi7',
                           'bsi8', 'bsi14', 'bsi19'),
                scale3_items = 6)

bsi_subscale %>% 
  rename(somat_symp = total_1) %>% 
  ggplot(aes(somat_symp)) + 
  geom_histogram(color = 'white',
                 fill = 'dodgerblue',
                 bins = 20)

bsi_subscale %>% 
  rename(anx_symp = total_2) %>% 
  ggplot(aes(anx_symp)) + 
  geom_histogram(color = 'white',
                 fill = 'dodgerblue',
                 bins = 20)

bsi_subscale %>% 
  rename(depress_symp = total_3) %>% 
  ggplot(aes(depress_symp)) + 
  geom_histogram(color = 'white',
                 fill = 'dodgerblue',
                 bins = 20)
```

### BSI Internal Reliability

```{r, message = FALSE, warning = FALSE}
new_col_bsi %>% 
  select(bsi1:bsi19) %>% 
  psych::alpha()
```

## 
